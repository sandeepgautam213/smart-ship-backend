name: CI/CD Pipeline for Smart Ship

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME_BACKEND: smartship-backend
  IMAGE_NAME_ML: smartship-ml
  AWS_REGION: ap-south-1 # Change to your region
  ECR_REPOSITORY: smartship

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: smartship
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  docker-build:
    name: Build Docker Images
    needs: lint-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Backend Image
        run: docker build -t $IMAGE_NAME_BACKEND -f docker/Dockerfile .

      - name: Build ML Image
        run: docker build -t $IMAGE_NAME_ML -f docker/Dockerfile.ml .

  deploy-aws:
    name: Deploy to AWS (EC2)
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/smart-ship-backend
            git pull origin main
            docker-compose down
            docker-compose up --build -d
          EOF
